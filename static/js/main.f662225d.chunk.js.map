{"version":3,"sources":["img/background.svg","components/info/Info.js","components/inputForm/inputForm.js","components/weatherDisplay/weatherDisplay.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Info","props","react_default","a","createElement","src","background","alt","id","className","tempType","onClick","setTempType","InputForm","error","role","onSubmit","getWeather","type","name","placeholder","autoComplete","spellcheck","value","weatherDisplay","currentTemp","city","celsius","parseInt","fahrenheit","concat","weatherIcon","description","toUpperCase","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","setState","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","country","response","data","wrap","_context","prev","next","preventDefault","target","elements","fetch","sent","ok","json","sys","main","temp","maxTemp","temp_max","minTemp","temp_min","weather","getWeatherIcon","stop","_x","apply","arguments","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","components_info_Info","components_weatherDisplay_weatherDisplay","inputForm_inputForm","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f662225d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.df710e20.svg\";","import React from 'react'\r\nimport './Info.css'\r\nimport background from '../../img/background.svg';\r\n\r\n\r\nconst Info = (props) => {\r\n    // props.tempType\r\n    // props.setTempType\r\n    \r\n    return (\r\n        <section>\r\n            <img src={background} alt='background' id='background' />\r\n            <h1 id='weather'>WEATHER</h1>\r\n            <hr />\r\n            <h1 id='forecast'>FORECAST</h1>\r\n            <p className='description'>Minimalistic weather app created using React. \r\n            <br />\r\n            Powered using Openweathermaps API.\r\n            <br/>Design by Bone Crush Media from Youtube.</p>\r\n            <div className='tempbuttons'>\r\n                <p>Your weather is currently showing in <strong>:</strong> </p>\r\n                <div className='buttons'>\r\n                    {/*-----CELSIUS BUTTON----- */}\r\n                    <div className='btn'> \r\n                    {props.tempType === 'C' ?\r\n                        <button className='clicked'>C</button>\r\n                        :\r\n                        <button onClick={props.setTempType}>C</button>\r\n                    }\r\n                    \r\n                        <p><strong>Celsius</strong></p>\r\n                    </div>\r\n                    {/*-----FAHRENHEIT BUTTON-----*/}\r\n                    <div className='btn'> \r\n                    {props.tempType ==='F' ?\r\n                        <button className='clicked'>F</button>\r\n                        :\r\n                        <button onClick={props.setTempType}>F</button>\r\n                    }\r\n                        <p><strong>Fahrenheit</strong></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react'\r\n\r\nimport './inputForm.css';\r\n\r\nconst InputForm = (props) => {\r\n    //props.getWeather\r\n    //props.error\r\n\r\n    return(\r\n        <section>\r\n            <div className='formContainer'>\r\n            <div>\r\n            {props.error ? error(): null} </div>\r\n            <form onSubmit={props.getWeather}>\r\n            <ul className='inputContainer'>\r\n            {/* CITY INPUT */}\r\n            <li>\r\n                <input \r\n                type='text'\r\n                name='city'\r\n                placeholder='City'\r\n                autoComplete=\"off\"\r\n                spellcheck='false'\r\n                 />\r\n            </li>\r\n            {/* COUNTRY INPUT */}\r\n            <li>\r\n                <input \r\n                type='text'\r\n                name='country'\r\n                placeholder='Country'\r\n                autoComplete=\"off\"\r\n                spellcheck='false'\r\n                />\r\n            </li>\r\n            </ul>\r\n            {/* GET WEATHER BUTTON */}\r\n            <input type=\"submit\" value=\"Get Weather\" />\r\n            </form>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nfunction error() {\r\n    return(\r\n        <div role='alert'>\r\n            <p className='alert'>Please Enter City &amp; Country</p>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputForm \r\n\r\n","import React from 'react'\r\n\r\nimport './weatherDisplay.css';\r\n\r\nconst weatherDisplay = (props) => {\r\n    // props.city\r\n    // props.country\r\n    // props.celsius\r\n    // props.description\r\n    // props.weatherIcon\r\n    // props.tempType\r\n\r\n    let currentTemp = 0;\r\n    if (props.city) {\r\n        let celsius = parseInt(props.celsius);\r\n        let fahrenheit = parseInt((celsius * 9/5) + 32);\r\n\r\n        if (props.tempType === 'C') {\r\n            currentTemp = celsius;\r\n        } else {\r\n            currentTemp = fahrenheit;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='weatherDisplayContainer'>\r\n                <div className='weatherDisplayContent'>\r\n                <i className={`wi ${props.weatherIcon} display-1`}></i>\r\n                {props.celsius ? (<p className='temp'> {props.city ? currentTemp : ''}°</p>): null}\r\n                <p className='location'><strong>{props.city}</strong> </p>  \r\n                <h4>{props.description.toUpperCase()}</h4>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default weatherDisplay\r\n\r\n    \r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\n// COMPONENTS\r\nimport Info from './components/info/Info'\r\nimport InputForm from './components/inputForm/inputForm'\r\nimport WeatherDisplay from './components/weatherDisplay/weatherDisplay'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      city: undefined,\r\n      country: undefined,\r\n      icon: undefined,\r\n      main: undefined,\r\n      celsius: undefined,\r\n      maxTemp: undefined,\r\n      minTemp: undefined,\r\n      description: '',\r\n      error: false,\r\n      //TEMPERATURE TYPE\r\n      tempType: 'C'\r\n    };\r\n\r\n    this.weatherIcon= {\r\n      Thunderstorm: \"wi-thunderstorm\",\r\n      Drizzle:\"wi-sleet\",\r\n      Rain:\"wi-storm-showers\",\r\n      Snow: \"wi-snow\",\r\n      Atmosphere: \"wi-fog\",\r\n      Clear: \"wi-day-sunny\",\r\n      Clouds: \"wi-day-fog\"\r\n    };\r\n  }\r\n\r\n  setTempType = () => {\r\n    if(this.state.tempType === 'C') {\r\n      this.setState({tempType:'F'})\r\n    } else {\r\n      this.setState({tempType:'C'})\r\n    }\r\n  }\r\n\r\n  getWeatherIcon(icons,rangeId) {\r\n    switch(true) {\r\n      case rangeId >= 200 && rangeId <= 232:\r\n        this.setState({icon:this.weatherIcon.Thunderstorm});\r\n        break;  \r\n      case rangeId >= 300 && rangeId <= 321:\r\n        this.setState({icon:this.weatherIcon.Drizzle});\r\n        break;\r\n      case rangeId >= 500 && rangeId <= 531:\r\n        this.setState({icon:this.weatherIcon.Rain});\r\n        break;\r\n      case rangeId >= 600 && rangeId <= 622:\r\n        this.setState({icon:this.weatherIcon.Snow});\r\n        break;\r\n      case rangeId >= 701 && rangeId <= 781:\r\n        this.setState({icon:this.weatherIcon.Atmosphere});\r\n        break;\r\n      case rangeId === 800:\r\n        this.setState({icon:this.weatherIcon.Clear});\r\n        break;\r\n      case rangeId >= 801 && rangeId <= 804:\r\n        this.setState({icon:this.weatherIcon.Clouds});\r\n        break;\r\n      default:\r\n        this.setState({icon:this.weatherIcon.Clouds});\r\n    }\r\n  }\r\n\r\n  getWeather = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const city = e.target.elements.city.value;\r\n    const country = e.target.elements.country.value;\r\n    const response = await fetch (`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&appid=b0ea363db2a0a285f5263ede3c11b099`);\r\n    \r\n    if(response.ok) {\r\n\r\n    const data = await response.json();\r\n    \r\n    this.setState({\r\n      city: `${data.name}, ${data.sys.country}`,\r\n      country: data.sys.country,\r\n      celsius: data.main.temp,\r\n      maxTemp: data.main.temp_max,\r\n      minTemp: data.main.temp_min,\r\n      description: data.weather[0].description,\r\n      error: false\r\n    });\r\n\r\n    this.getWeatherIcon(this.weatherIcon, data.weather[0].id );\r\n  } else {\r\n    this.setState({error:true});\r\n   };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Info \r\n        tempType={this.state.tempType}\r\n        setTempType={this.setTempType}\r\n        />\r\n        <WeatherDisplay\r\n        city={this.state.city} \r\n        country={this.state.country}\r\n        celsius={this.state.celsius}\r\n        maxTemp={this.state.maxTemp}\r\n        minTemp={this.state.minTemp}\r\n        description={this.state.description}\r\n        weatherIcon={this.state.icon}\r\n        tempType={this.state.tempType}\r\n        />\r\n        <InputForm \r\n        getWeather={this.getWeather}\r\n        error={this.state.error}\r\n        />\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}